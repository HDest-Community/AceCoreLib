version "4.5"

#include "ZScript.Mags.zsc"
#include "ZScript.Collision.zsc"
#include "ZScript.Effects.zsc"
#include "ZScript.Information.zsc"
#include "ZScript.Interfacing.zsc"
#include "ZScript.Strings.zsc"
#include "ZScript.TexChecking.zsc"
#include "ZScript.Weights.zsc"
#include "ZScript.ChanceScaling.zsc"

class AceCoreGlobalStats : Thinker
{
	static AceCoreGlobalStats Get()
	{
		ThinkerIterator it = ThinkerIterator.Create('AceCoreGlobalStats', STAT_STATIC);
		AceCoreGlobalStats t = null;
		while (t = AceCoreGlobalStats(it.Next()))
		{
			return t;
		}

		t = new('AceCoreGlobalStats');
		t.ChangeStatNum(STAT_STATIC);
		return t;
	}

	int LevelsCompleted;
}

class AceCore play
{
	static void Tether(Actor puller, Actor other, double speed = 1.0)
	{
		other.A_Face(puller, 0, 0);
		other.A_ChangeVelocity(speed, 0, -speed * sin(other.pitch), CVF_RELATIVE | CVF_REPLACE);
		vector3 dir = puller.Vec3To(other);
		dir.z -= puller.height / 4;
		vector3 unit = dir.unit();
		for (double i = 0; i < puller.Distance3D(other); i += 0.75)
		{
			puller.A_SpawnParticle(0x00CCCC, SPF_FULLBRIGHT, 1, 1.5, 0, unit.x * i, unit.y * i, puller.height / 2 + unit.z * i);
		}
	}

	static void GiveToPlayers(class<Inventory> cls, int amt, bool split = true)
	{
		if (!cls || amt <= 0)
		{
			return;
		}

		int playersInGame = 0;
		if (split)
		{
			for (int i = 0; i < PlayerInGame.Size(); ++i)
			{
				if (PlayerInGame[i])
				{
					playersInGame++;
				}
			}
		}
		for (int i = 0; i < MAXPLAYERS; ++i)
		{
			if (players[i].mo)
			{
				players[i].mo.A_GiveInventory(cls, int(ceil(amt / double(split ? playersInGame : 1))));
			}
		}
	}
}

class AceCoreHandler : EventHandler
{
	override void NetworkProcess(ConsoleEvent e)
	{
		let plr = players[e.Player].mo;
		if (e.Name ~== "ACL_Ruler")
		{
			plr.A_SpawnItemEx("AceRuler", flags: SXF_NOCHECKPOSITION | SXF_SETMASTER);
		}
		if (e.Name ~== "ACL_Linetracer")
		{
			FLineTraceData data;
			plr.LineTrace(plr.angle, HDCONST_ONEMETRE * 100, plr.pitch, TRF_ALLACTORS, plr.height - HDCONST_CROWNTOSHOULDER, data: data);
			Actor.Spawn('BulletPuff', data.HitLocation);
			if (data.HitSector)
			{
				Console.Printf("%i", AceCore.GetPlanePitch(data.HitSector, data.HitSector.floorplane));
			}
		}
	}

	override void WorldUnloaded(WorldEvent e)
	{
		AceCoreGlobalStats.Get().LevelsCompleted++;
	}
}

class AceRuler : Actor
{
	override void Tick()
	{
		if (!master || --ReactionTime <= 0)
		{
			Destroy();
			return;
		}

		double D2D = Distance2D(master);
		double D3D = Distance3D(master);
		master.A_Log(String.Format("Distance2D: %.2f (%.2fm); Distance3D: %.2f (%.2fm)", D2D, D2D / HDCONST_ONEMETRE, D3D, D3D / HDCONST_ONEMETRE));

		Super.Tick();
	}

	Default
	{
		+NOINTERACTION
		ReactionTime 35 * 20;
	}
}